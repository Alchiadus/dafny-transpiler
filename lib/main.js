import fs from 'fs';
import path from 'path';

import Parser from './parser/parser';
import Generator from './generator/generator.js';

export default class DafnyOwickiGriesTranspiler {

  /**
   * Transpiles a file containing Dafny source code.
   *
   * @param  {String} inputFile  the path of the file that needs to be transpiled
   * @param  {String} outputFile the path of the file that has been transpiled
   */
  static transpileFile(inputFile, outputFile) {
    if (!outputFile) {
      const fileExtension = path.extname(inputFile);
      const fileNameSuffix = '-transpiled';
      const fileName = path.basename(inputFile, fileExtension);
      const fileNamePrefix = '';
      const filePath = path.dirname(inputFile);
      outputFile = path.join(filePath, `${fileNamePrefix}${fileName}${fileNameSuffix}${fileExtension}`);
    }
    const sourceCode = fs.readFileSync(inputFile);
    const transpiledSourceCode = DafnyOwickiGriesTranspiler.transpile(sourceCode);
    fs.writeFileSync(outputFile, transpiledSourceCode);
  }

  /**
   * Transpiles a piece of Dafny source code.
   *
   * @param  {String} sourceCode the Dafny source code that needs to be transpiled
   * @return {String}            the Dafny source code that has been transpiled
   */
  static transpile(sourceCode) {
    const parser = new Parser();
    const parseTree = parser.parse(sourceCode);
    const generator = new Generator();
    const transpiledSourceCode = generator.generate(parseTree);
    const transpiledBanner = '// Automatically generated by the Dafny Owicki-Gries Transpiler.\n\n';
    return transpiledBanner.concat(transpiledSourceCode);
  }
}
